"use strict";var __awaiter=this&&this.__awaiter||function(e,n,o,l){return new(o=o||Promise)(function(a,t){function s(e){try{i(l.next(e))}catch(e){t(e)}}function r(e){try{i(l.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?a(e.value):((t=e.value)instanceof o?t:new o(function(e){e(t)})).then(s,r)}i((l=l.apply(e,n||[])).next())})},__generator=this&&this.__generator||function(a,s){var r,i,n,o={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]},e={next:t(0),throw:t(1),return:t(2)};return"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,i&&(n=2&t[0]?i.return:t[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,t[1])).done)return n;switch(i=0,(t=n?[2&t[0],n.value]:t)[0]){case 0:case 1:n=t;break;case 4:return o.label++,{value:t[1],done:!1};case 5:o.label++,i=t[1],t=[0];continue;case 7:t=o.ops.pop(),o.trys.pop();continue;default:if(!(n=0<(n=o.trys).length&&n[n.length-1])&&(6===t[0]||2===t[0])){o=0;continue}if(3===t[0]&&(!n||t[1]>n[0]&&t[1]<n[3])){o.label=t[1];break}if(6===t[0]&&o.label<n[1]){o.label=n[1],n=t;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(t);break}n[2]&&o.ops.pop(),o.trys.pop();continue}t=s.call(a,o)}catch(e){t=[6,e],i=0}finally{r=n=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CircleService=void 0;var logger_util_1=require("../utils/logger.util"),table_1=require("../dba/table"),api_logs_1=require("../utils/api-logs"),validation_util_1=require("../utils/validation.util"),response_util_1=require("../utils/response.util"),knex=require("../dba/knex.db"),CircleService=function(){function e(){this.apiInstance=new api_logs_1.ApiLogs,this.validateInstance=new validation_util_1.Validation,this.responseInstance=new response_util_1.ResponseCall}return e.prototype.getCircle=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.from(table_1.Table.tbl_circle+" as c").select("c.*",knex.raw("GROUP_CONCAT(p.name) as package_name"),knex.raw("GROUP_CONCAT(p.id) as package_id")).leftJoin(table_1.Table.tbl_Features+" as f","f.circle_id","c.id").leftJoin(table_1.Table.tbl_Package+" as p","p.feature_id","f.id").groupBy("c.id").then(function(e){e.length?((e=e?JSON.parse(JSON.stringify(e)):[]).map(function(e){var r=[],t=e.package_id?e.package_id.split(","):[],i=e.package_name?e.package_name.split(","):[];delete e.package_id,delete e.package_name,t.forEach(function(a,s){i.forEach(function(e,t){s===t&&r.push({id:Number(a),name:e})})}),e.packages=r}),t.json({status_code:200,message:"Circle Listing.",data:e}),r.apiInstance.log(200,"Circle Listing Info.","getCircle",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getCircle",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getCircle",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getCircle",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getDialOutRates=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.select("cp.id","cp.name","c.name as circle_name",knex.raw("GROUP_CONCAT(cr.dial_prefix) as dial_prefix"),knex.raw("GROUP_CONCAT(cr.buying_rate) as buying_rate"),knex.raw("GROUP_CONCAT(cr.selling_rate) as selling_rate"),knex.raw("GROUP_CONCAT(p.provider) as gateway_name"),knex.raw("IF (cp.lc_type = '0','LCR - According to the buyer price','LCD - According to the seller price') as lcTypeDisplay")).from(table_1.Table.tbl_Call_Plan+" as cp").leftJoin(table_1.Table.tbl_Call_Plan_Rates+" as cr","cr.call_plan_id","cp.id").leftJoin(table_1.Table.tbl_circle+" as c","c.id","cp.circle_id").leftJoin(table_1.Table.tbl_Gateway+" as g","g.id","cr.gateway_id").leftJoin(table_1.Table.tbl_Provider+" as p","p.id","g.provider_id").where("cp.status","=","1").andWhere("cp.is_minute_plan","=","0").groupBy("cp.id").orderBy("cp.name").then(function(e){e.length?((e||[]).map(function(e){var t=e,l=[],a=e.buying_rate?e.buying_rate.split(","):[],s=e.selling_rate?e.selling_rate.split(","):[],d=e.gateway_name?e.gateway_name.split(","):[],r=e.dial_prefix?e.dial_prefix.split(","):[];return a.forEach(function(n,o){r.forEach(function(r,i){s.forEach(function(a,s){d.forEach(function(e,t){o===i&&i===s&&s===t&&l.push({dial_prefix:r,buying_rate:n,selling_rate:a,gateway_name:e})})})})}),e.destination=l,delete t.id,delete t.buying_rate,delete t.selling_rate,delete t.gateway_name,delete t.dial_prefix,t}),t.json({status_code:200,message:"DialOut Rates Listing.",data:e}),r.apiInstance.log(200,"DialOut Rates Listing Info.","getDialOutRates",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getDialOutRates",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getDialOutRates",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getDialOutRates",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getCountries=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.from(table_1.Table.tbl_Country+" as c").select("c.*").then(function(e){e.length?(t.json({status_code:200,message:"Country Listing.",data:e}),r.apiInstance.log(200,"Country Listing Info.","getCountries",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getCountries",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getCountries",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getCountries",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getStates=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.from(table_1.Table.tbl_States+" as s").select("s.*").then(function(e){e.length?(t.json({status_code:200,message:"States Listing.",data:e}),r.apiInstance.log(200,"States Listing Info.","getStates",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getStates",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getStates",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getStates",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getDialOutGroup=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?((e=knex.from(table_1.Table.tbl_Dialout_Group).select("id","name","description")).orderBy("name","asc"),e.then(function(e){e.length?(t.json({status_code:200,message:"DialOutGroup Listing.",data:e}),r.apiInstance.log(200,"DialOutGroup Listing Info.","getDialOutGroup",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getDialOutGroup",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getDialOutGroup",s,"","",""),e})):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getDialOutGroup",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getTimeZone=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.from(table_1.Table.tbl_TimeZone+" as c").select("c.*").then(function(e){e.length?(t.json({status_code:200,message:"TimeZone Listing.",data:e}),r.apiInstance.log(200,"TimeZone Listing Info.","getTimeZone",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getTimeZone",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getTimeZone",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getTimeZone",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getBillingType=function(e,t,a,s){"0"==(e.user_type||1)?((e=[]).push({id:1,name:"Prepaid"}),e.push({id:2,name:"Postpaid"}),t.json({status_code:200,message:"Billing Type Listing.",data:e}),this.apiInstance.log(200,"Billing Type Listing Info.","getBillingType",s,"","")):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getBillingType",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getPackageType=function(e,t,a,s){"0"==(e.user_type||1)?((e=[]).push({id:1,name:"Standard"}),e.push({id:3,name:"Enterprise bucket"}),t.json({status_code:200,message:"Package Type Listing.",data:e}),this.apiInstance.log(200,"Billing Type Listing Info.","getPackageType",s,"","")):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getPackageType",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getProductType=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.from(table_1.Table.tbl_Product+" as c").select("c.id","c.name").where("c.status","=","1").then(function(e){e.length?(t.json({status_code:200,message:"Product Type Listing.",data:e}),r.apiInstance.log(200,"Product Type Listing Info.","getProductType",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getProductType",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getProductType",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getProductType",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getProvider=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.from(table_1.Table.tbl_Provider+" as c").select("c.id","c.provider as name").then(function(e){e.length?(t.json({status_code:200,message:"Provider Listing.",data:e}),r.apiInstance.log(200,"Provider Listing Info.","getProvider",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getProvider",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getProvider",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getProvider",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getGateway=function(e,t,a,s){var r=this;"0"==(e.user_type||1)?knex.raw("Call pbx_get_gateway(null,null,null,null)").then(function(e){e.length?(t.json({status_code:200,message:"Gateway Listing.",data:e[0][0]}),r.apiInstance.log(200,"Gateway Listing Info.","getGateway",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),r.apiInstance.log(201,"No Data found.","getGateway",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),r.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getGateway",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getGateway",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.createGateway=function(n,o,e){return __awaiter(this,void 0,void 0,function(){var t,a,s,r,i=this;return __generator(this,function(e){switch(e.label){case 0:return(t=n.user_type||1,a=n.body,"0"!=t)?[3,4]:(a.provider_name||(this.apiInstance.log(402,"Parameter Missing","","","createGateway"),o.status(402).send({status_code:402,error:"Parameter Missing.",message:"Please enter the provider name."})),"string"!=typeof a.provider_name?(this.apiInstance.log(402,"Inavlid Data.","","","createProvider"),[2,o.status(402).send({status_code:402,error:"Inavlid data format.",message:"please enter only valid data."})]):[4,this.validateInstance.validateProviderExist(a.provider_name)]);case 1:if(0==(s=e.sent()))return this.apiInstance.log(402,"Provider Exist.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"Invalid provider.",message:"please provide valid provider."})];if(!a.ip&&!a.domain)return this.apiInstance.log(402,"Parameter-Missing.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"parameter Missing",message:"please provide one either ip or domain."})];if(a.ip&&a.domain)return this.apiInstance.log(402,"please provide only one","","create Gateway."),[2,o.status(402).send({status_code:402,error:"parameter exceed.",message:"please provide only one either ip and domain."})];if(a.domain&&!a.port)return this.apiInstance.log(402,"Parameter Missing.","","create gateway."),[2,o.status(402).send({status_code:402,error:"Parameter Missing.",message:"please provide the port value."})];if(a.transport_type&&"0"!=a.transport_type&&"1"!=a.transport_type&&"2"!=a.transport_type&&(this.apiInstance.log(402,"Invaid Value.","","","create Gateway."),o.status(402).send({status_code:"402",error:"Invalid value.",message:"transport type should be 0, 1 & 2"})),a.dtmf&&"0"!=a.dtmf&&"1"!=a.dtmf&&"2"!=a.dtmf&&"3"!=a.dtmf&&"4"!=a.dtmf&&(this.apiInstance.log(402,"Invalid Value","","","create Gateway."),o.status(402).send({status_code:402,error:"Invalid Value.",message:"dtmf type should be 0, 1, 2, 3 & 4"})),a.profile&&"0"!=a.profile&&"1"!=a.profile&&"2"!=a.profile)return this.apiInstance.log(402,"Invalid value","","create Gateway."),[2,o.status(402).send({status_code:402,error:"Invalid profile.",message:"please provide valid value for profile."})];if(a.callerid&&"string"==typeof a.callerid&&(this.apiInstance.log(402,"Invalid Value","","create Gateway."),o.status(402).send({status_code:402,error:"Invalid data.",message:"only number allowed."})),a.contactParam&&20<a.contactParam.toString().length)return this.apiInstance.log(400,"Length exceed.","","create Gateway."),[2,o.status(400).send({status_code:400,error:"Invalid length.",message:"please provide valid length."})];if(a.is_fromDomain&&("0"!=a.is_fromDomain&&"1"!=a.is_fromDomain&&(this.apiInstance.log(402,"Invalid value.","","create Gateway."),o.status(402).send({status_code:402,error:"Invalid data.",message:"from domain should be either 0 or 1"})),"1"==a.is_fromDomain&&a.fromDomain&&(this.apiInstance.log(402,"Invalid value.","","create Gateway."),o.status(402).send({status_code:402,error:"Access denied.",message:"please disable from-Domain befor access it."}))),a.is_register_proxy&&("0"!=a.is_register_proxy&&"1"!=a.is_register_proxy&&(this.apiInstance.log(402,"Invalid value.","","create Gateway."),o.status(402).send({status_code:402,error:"Invalid data.",message:"register proxy should be either 0 or 1"})),"1"==a.is_register_proxy&&a.registerProxy&&(this.apiInstance.log(402,"Invalid value.","","create Gateway."),o.status(402).send({status_code:402,error:"Access denied.",message:"please disable register proxy befor access it."}))),a.simultaneous_call&&3<a.simultaneousCall.toString().length&&(this.apiInstance.log(400,"Length exceed.","","","create Gateway."),o.status(400).send({status_code:400,error:"Invalid length.",message:"Parameter length exceed."})),a.status&&"0"!=a.status&&"1"!=a.status)return this.apiInstance.log(402,"invalid Parameter.","","create Gateway."),[2,o.status(402).send({status_code:400,error:"invalid data.",message:"please provide valid value for status."})];if(a.isrealm&&0!=a.isrealm&&1!=a.isrealm)return this.apiInstance.log(402,"invalid value.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"invalid value.",message:"is realm should be 0 or 1."})];if(a.prepend_digitin_dial){if("string"==a.prepend_digitin_dial)return this.apiInstance.log(402,"invalid value.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"invalid value.",message:"prepend didit in dial should be number."})];if(5<a.prepend_digitin_dial.toString().length)return this.apiInstance.log(400,"Length exceed.","","","create Gateway."),[2,o.status(400).send({status_code:400,error:"Invalid length.",message:"Parameter Length exceed."})]}if(a.striped_digitin_dial){if("string"==a.striped_digitin_dial)return this.apiInstance.log(402,"invalid value.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"invalid value.",message:"striped didit in dial should be number."})];if(5<a.striped_digitin_dial.toString().length)return this.apiInstance.log(400,"Length exceed.","","","create Gateway."),[2,o.status(400).send({status_code:400,error:"Length exceed.",message:"Parameter Length exceed."})]}if(a.striped_digitin_caller){if("string"==a.striped_digitin_caller)return this.apiInstance.log(402,"invalid value.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"invalid value.",message:"striped didit in dial should be number."})];if(5<a.striped_digitin_caller.toString().length)return this.apiInstance.log(400,"Length exceed.","","","create Gateway."),[2,o.status(400).send({status_code:400,error:"Invalid length.",message:"Parameter Length exceed."})]}if(a.prepend_digitin_caller){if("string"==a.prepend_digitin_caller)return this.apiInstance.log(402,"invalid value.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"invalid value.",message:"prepend didit in dial should be number."})];if(5<a.prepend_digitin_caller.toString().length)return this.apiInstance.log(400,"Length exceed.","","","create Gateway."),[2,o.status(400).send({status_code:400,error:"Invalid length.",message:"Parameter Length exceed."})]}if(a.caller_value_different){if("0"!=a.caller_value_different&&"1"!=a.caller_value_different)return this.apiInstance.log(402,"invalid Parameter.","","create Gateway."),[2,o.status(402).send({status_code:400,error:"invalid data.",message:"status should be 0 or 1"})];if("1"==a.caller_value_different){if(a.calleridvalue&&15<a.calleridvalue.toString().length)return this.apiInstance.log(402,"Length exceed.","","","create Gateway."),[2,o.status(402).send({status_code:402,error:"Length exceed.",message:"Parameter Length exceed."})];if(a.calleridtype&&"0"!=a.calleridtype&&"1"!=a.calleridtype&&"2"!=a.calleridtype)return this.apiInstance.log(402,"invalid Parameter.","","create Gateway."),[2,o.status(402).send({status_code:400,error:"invalid data.",message:"caller id header type should be 0 1 & 2"})]}}return a.codec?[4,this.validateInstance.validateCodec(a.codec)]:[3,3];case 2:if(0==(r=e.sent()))return this.apiInstance.log(402,"does not exist.","","create Gateway."),[2,o.status(402).send({status_code:402,error:"invalid codec.",message:"please provide valid codec."})];e.label=3;case 3:a.ip=a.ip||0,a.domain=a.domain||"",a.contactParam=a.contactParam||"",a.transport_type=a.transport_type||"0",a.isSign=a.isSign||"0",a.fromUser=a.fromUser||"",a.dtmf=a.dtmf||"0",a.is_register_proxy=a.is_register_proxy||"0",a.registerProxy=a.registerProxy||"",a.status=a.status||"0",a.isrealm=a.isrealm||"0",a.realm=a.realm||"",a.profile=a.profile||"1",a.simultaneousCall=a.simultaneousCall||"",a.prepend_digitin_dial=a.prepend_digitin_dial||"",a.prepend_digitin_caller=a.prepend_digitin_caller||"",a.striped_digitin_caller=a.striped_digitin_caller||"",a.striped_digitin_dial=a.striped_digitin_dial||"",a.callerid=a.callerid||"",a.calleridvalue=a.calleridvalue||"",a.codec=a.codec||"PCMA,PCMU",a.fromDomain=a.fromDomain||"",a.authname=a.authname||"0",a.password=a.password||"0",a.expirysec=a.expirysec||3600,a.ping=a.ping||60,a.retrysec=a.retrysec||30,"1"==a.register&&(a.authname=a.authname||"0",a.password=a.password||"0",a.expirysec=a.expirysec||3600,a.ping=a.ping||60,a.retrysec=a.retrysec||30),knex(table_1.Table.tbl_Gateway).where("ip",a.ip).select("id").then(function(e){return console.log(e,"------response--------"),0<e.length?(i.apiInstance.log(400,"Duplicate entry.","","create gateway."),o.status(400).send({status_code:400,error:"Duplicate entry.",message:"Gateway already exist."})):void knex(table_1.Table.tbl_Gateway).insert({provider_id:""+s,ip:""+a.ip,port:""+a.port,from_user:""+a.fromUser,auth_username:""+a.authname,password:""+a.password,register:""+a.register,expiry_sec:""+a.expirysec,ping:""+a.ping,retry_sec:""+a.retrysec,prependDigit_dialnumber:""+a.prepend_digitin_dial,prependDigit__callerID:""+a.prepend_digitin_caller,strip_clr_id:""+a.striped_digitin_caller,strip_clr_num:""+a.striped_digitin_dial,is_sign:""+a.isSign,callerID:""+a.callerid,callerID_headertype:""+a.calleridtype,callerID_headervalue:""+a.calleridvalue,codec:""+r,transport_type:""+a.transport_type,dtmf_type:""+a.dtmf,simultaneous_call:""+a.simultaneousCall,calling_profile:""+a.contactParam,sofia_id:"1",realm:""+a.realm,domain:""+a.domain,subnet:"1",status:""+a.status,outbound_proxy:""+a.fromDomain,register_proxy:""+a.registerProxy,is_outbound_proxy:""+a.is_fromDomain,is_register_proxy:""+a.is_register_proxy,sofia_profile:""+a.profile,is_realm:""+a.isrealm}).then(function(e){if(0!=e)return i.apiInstance.log(200,"Gateway Created Successfully.","","create Gateway."),o.status(200).send({status_code:200,message:"Gateway Created Successfully."})}).catch(function(e){return logger_util_1.errorLog(e),i.apiInstance.log(400,"Bad Request.","","create Gateway."),o.status(400).send({status_code:400,error:"Bad Request."})})}).catch(function(e){return logger_util_1.errorLog(e),i.apiInstance.log(400,"Bad Request.","","create Gateway."),o.status(400).send({status_code:400,error:"Bad Request."})}),e.label=4;case 4:return[2]}})})},e}();exports.CircleService=CircleService;