"use strict";var __awaiter=this&&this.__awaiter||function(e,i,l,o){return new(l=l||Promise)(function(a,t){function s(e){try{r(o.next(e))}catch(e){t(e)}}function n(e){try{r(o.throw(e))}catch(e){t(e)}}function r(e){var t;e.done?a(e.value):((t=e.value)instanceof l?t:new l(function(e){e(t)})).then(s,n)}r((o=o.apply(e,i||[])).next())})},__generator=this&&this.__generator||function(a,s){var n,r,i,l={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},e={next:t(0),throw:t(1),return:t(2)};return"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,r&&(i=2&t[0]?r.return:t[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,t[1])).done)return i;switch(r=0,(t=i?[2&t[0],i.value]:t)[0]){case 0:case 1:i=t;break;case 4:return l.label++,{value:t[1],done:!1};case 5:l.label++,r=t[1],t=[0];continue;case 7:t=l.ops.pop(),l.trys.pop();continue;default:if(!(i=0<(i=l.trys).length&&i[i.length-1])&&(6===t[0]||2===t[0])){l=0;continue}if(3===t[0]&&(!i||t[1]>i[0]&&t[1]<i[3])){l.label=t[1];break}if(6===t[0]&&l.label<i[1]){l.label=i[1],i=t;break}if(i&&l.label<i[2]){l.label=i[2],l.ops.push(t);break}i[2]&&l.ops.pop(),l.trys.pop();continue}t=s.call(a,l)}catch(e){t=[6,e],r=0}finally{n=i=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MinutePlanService=void 0;var logger_util_1=require("../utils/logger.util"),table_1=require("../dba/table"),api_logs_1=require("../utils/api-logs"),validation_util_1=require("../utils/validation.util"),constant_1=require("../utils/constant"),knex=require("../dba/knex.db"),MinutePlanService=function(){function e(){this.apiInstance=new api_logs_1.ApiLogs,this.validationInstance=new validation_util_1.Validation}return e.prototype.getMinutePlanForAdmin=function(t,i,e){var l=this,a=t.body,o=a.type;if(!a.type)return this.apiInstance.log(402,"Parameter Missing - type.","getMinutePlan","pbx","",t.ext_number,JSON.stringify(a)),i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the type"});var u="1"==a.type?"Bundle":"2"==a.type?"Roaming":"3"==a.type?"Booster":"Teleconsultation";if("1"!=a.type&&"2"!=a.type&&"4"!=a.type&&"3"!=a.type)return this.apiInstance.log(406,"Unauthorize Type - Parameter Type is incorrect.","getMinutePlan","pbx","","",JSON.stringify(a)),i.status(406).send({status_code:406,error:"Parameter Type is incorrect",message:"Please enter the correct type"});"0"==(t.user_type||1)?(console.log(knex.raw("Call pbx_getMinutePlanForBackend('"+o+"',null,null,null)").toQuery()),knex.raw("Call pbx_getMinutePlanForBackend('"+o+"',null,null,null)").then(function(s){if(s){console.log(s[0][0],"-----------------------------");var n=s[0][0],r=0;if(n.length){for(var e=s[0][0]||[],t=0;t<e.length;t++)!function(a){console.log(knex.raw("Call pbx_getCallPlanRateByFilters("+e[a].call_plan_id+",null,null,null,null,'"+o+"')").toString()),knex.raw("Call pbx_getCallPlanRateByFilters("+e[a].call_plan_id+",null,null,null,null,'"+o+"')").then(function(e){var t;r++,e&&(e=e[0][0]||[],t=[],e.forEach(function(e){t.push({dial_prefix:e.dial_prefix,talktime_minutes:e.talktime_minutes})}),Object.assign(s[0][0][a],{destination:t})),n.length==r&&((s[0][0]||[]).map(function(e){return delete e.id,delete e.plan_type,delete e.call_plan,delete e.is_overuse,delete e.number_of_days,delete e.status,delete e.created_at,delete e.updated_at,e}),l.apiInstance.log(200,"Minute Plan Info - "+u,"getMinutePlan","pbx","",""),i.send({status_code:200,message:"Minutes Plan Info.",data:s[0][0]}))}).catch(function(e){i.send({response:{code:e.errno,message:e.sqlMessage}})})}(t);console.log(n.length),console.log(r)}else i.status(201).send({status_code:201,message:"No Data found"}),l.apiInstance.log(201,"No Data found -"+u,"getMinutePlan","pbx","","","")}}).catch(function(e){throw logger_util_1.errorLog(e),i.status(400).send({status_code:400,message:"Bad Request"}),l.apiInstance.log(400,"Bad Request.","getMinutePlan","pbx","",t.ext_number,JSON.stringify(a)),e})):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getMinutePlan","pbx","","",""),i.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getCallPlan=function(e,t,a,s){var n=this;"0"==(e.user_type||1)?knex.raw("Call pbx_get_callplan(null,null)").then(function(e){e.length?(t.json({status_code:200,message:"Call Plan Listing.",data:e[0][0]}),n.apiInstance.log(200,"Call Plan Listing Info.","getCallPlan",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),n.apiInstance.log(201,"No Data found.","getCallPlan",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),n.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getCallPlan",s,"","",""),e}):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getCallPlan",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"}))},e.prototype.getCallPlanRates=function(e,t,a,s){var n=this,r=e.user_type||1;if(!e.query.plan_type)return this.apiInstance.log(402,"Parameter Missing - plan_type in URL.","getCallPlanRates",s,"",e.ext_number,""),t.status(402).send({status_code:402,error:"Parameter Missing in URL",message:"Please enter the plan_type in url"});if("0"==r){r=e.query.plan_type||5;if(r!=constant_1.MinutePlanTypeConstants.STANDARD&&r!=constant_1.MinutePlanTypeConstants.BUNDLE&&r!=constant_1.MinutePlanTypeConstants.ROAMING&&r!=constant_1.MinutePlanTypeConstants.BOOSTER&&r!=constant_1.MinutePlanTypeConstants.TELECONSULTANCY)return this.apiInstance.log(406,"Unauthorize Type - Parameter plan_type is incorrect.","getCallPlanRates","pbx","","",JSON.stringify(e.query)),t.status(406).send({status_code:406,error:"Parameter Type is incorrect",message:"Please enter the correct plan_type"});knex.raw("Call pbx_getCallPlanRateByFilters(null,null,null,null, null, "+r+")").then(function(e){e.length?(t.json({status_code:200,message:"Call Plan Rate Listing.",data:e[0][0]}),n.apiInstance.log(200,"Call Plan Rate Listing Info.","getCallPlanRates",s,"","")):(t.status(201).send({status_code:201,message:"No Data found"}),n.apiInstance.log(201,"No Data found.","getCallPlanRates",s,"","",""))}).catch(function(e){throw logger_util_1.errorLog(e),t.status(400).send({status_code:400,message:"Bad Request"}),n.apiInstance.log(400,"Bad Request: "+e.sqlMessage,"getCallPlanRates",s,"","",""),e})}else this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","getCallPlanRates",s,"","",""),t.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"})},e.prototype.callPlanCreation=function(r,i,e){return __awaiter(this,void 0,void 0,function(){var t,a,s,n=this;return __generator(this,function(e){switch(e.label){case 0:return(t=r.body).name?[4,this.validationInstance.validateCallPlanName(t.name)]:(this.apiInstance.log(402,"Parameter Missing - name.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the name"})]);case 1:if(0==e.sent())return this.apiInstance.log(402,"Call Plan Exist..","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Invalid Parameter.",message:"call plan already exist."})];if(!t.lctype)return this.apiInstance.log(402,"Parameter Missing - lctype.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the lctype"})];if("1"!=t.lctype&&"2"!=t.lctype)return this.apiInstance.log(402,"LC Type should be either 1 or 0.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"lctype value.",message:"LC Type should be either 1 or 0."})];if(t.iscircle&&t.isminuteplan)return this.apiInstance.log(405,"Both functionality Circle and Minuteplan are not allowed together.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(405).send({status_code:405,error:"Not allowed : iscircle,isminuteplan",message:"Both functionality Circle and Minuteplan are not allowed together"})];if(t.iscircle){if("number"!=typeof t.iscircle)return this.apiInstance.log(402,"Only Number allowed.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Only Number allowed.",message:"Please provide the correct iscircle."})];if(1!=t.iscircle&&0!=t.iscircle)return this.apiInstance.log(402,"Is Circle  should be either 1 or 0.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"iscircle value.",message:"Is Circle should be either 1 or 0."})];if(!t.circleid)return this.apiInstance.log(402,"Parameter Missing - circleid.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the circleid"})]}return t.circleid?"number"!=typeof t.circleid?(this.apiInstance.log(402,"Only Number allowed.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Only Number allowed.",message:"Please provide the correct circleid."})]):[4,this.validationInstance.validateCircleExist(t.circleid)]:[3,3];case 2:if(e.sent())return this.apiInstance.log(402,"Circle id does not exist.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({error:"Wrong circle id",message:"circleid does not exist."})];e.label=3;case 3:if(t.isminuteplan){if("number"!=typeof t.isminuteplan)return this.apiInstance.log(402,"Only Number allowed.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Only Number allowed.",message:"Please provide the correct iscircle."})];if(1!=t.isminuteplan&&0!=t.isminuteplan)return this.apiInstance.log(402,"Is Circle  should be either 1 or 0.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"iscircle value.",message:"Is Circle should be either 1 or 0."})];if(!t.minuteplantype)return this.apiInstance.log(402,"Parameter Missing - minuteplantype.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the minuteplantype"})]}if(t.minuteplantype){if("number"!=typeof t.minuteplantype)return this.apiInstance.log(402,"Only Number allowed.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Only Number allowed.",message:"Please provide the correct minuteplantype."})];if(1!=t.minuteplantype&&2!=t.minuteplantype&&3!=t.minuteplantype&&4!=t.minuteplantype)return this.apiInstance.log(402,"Minute Plan Type should be 1,2,3,4","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"iscircle value.",message:"Minute Plan Type should be 1,2,3,4"})];if(3==t.minuteplantype){if(!t.isvisiblecustomer)return this.apiInstance.log(402,"Parameter Missing - isvisiblecustomer.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the isvisiblecustomer"})];if("number"!=typeof t.isvisiblecustomer)return this.apiInstance.log(402,"Only Number allowed.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Only Number allowed.",message:"Please provide the correct isvisiblecustomer."})];if(1!=t.isvisiblecustomer&&0!=t.isvisiblecustomer)return this.apiInstance.log(402,"Is Visible Customer  should be either 1 or 0.","callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"isvisiblecustomer value.",message:"Is Visible Customer should be either 1 or 0."})]}}return"0"==(r.user_type||1)?(a=r.body,s=a.id||null,r.protocol,r.get("host"),a.user_type="1",a.iscircle=a.iscircle||0,a.circleid=a.circleid||"",a.isMinutePlan=a.isMinutePlan||0,a.minuteplantype=a.minuteplantype||"",a.isvisiblecustomer=a.isvisiblecustomer||0,console.log(knex.raw("Call pbx_save_callplan("+s+",'"+a.name+"','"+a.lctype+"','"+a.iscircle+"','"+a.circleid+"','"+a.isMinutePlan+"','"+a.minuteplantype+"','"+a.isvisiblecustomer+"','1')").toString()),knex.raw("Call pbx_save_callplan("+s+",'"+a.name+"','"+a.lctype+"','"+a.iscircle+"','"+a.circleid+"','"+a.isMinutePlan+"','"+a.minuteplantype+"','"+a.isvisiblecustomer+"','1')").then(function(e){n.apiInstance.log(200,"Call Plan created succesfully","callPlanCreation","pbx","",r.ext_number,""),i.send({status_code:200,message:"Call Plan created succesfully."})}).catch(function(e){throw logger_util_1.errorLog(e),i.status(400).send({status_code:400,message:"Bad Request :"+e}),n.apiInstance.log(400,"Bad Request : "+e,"callPlanCreation","pbx","",r.ext_number,JSON.stringify(t)),e})):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","callPlanCreation","pbx","","",""),i.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"})),[2]}})})},e.prototype.providerCreation=function(r,i,e){return __awaiter(this,void 0,void 0,function(){var t,a,s,n=this;return __generator(this,function(e){switch(e.label){case 0:return t=r.body,a=r.user_type||1,t.name?t.name?[4,this.validationInstance.validateProviderExist(t.name)]:[3,2]:(this.apiInstance.log(402,"Parameter Missing - name.","providerCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({status_code:402,error:"Parameter Missing",message:"Please enter the name"})]);case 1:if(s=e.sent(),console.log(s,"isnameVerified"),0==s)return this.apiInstance.log(402,"Provider Name already exist.","providerCreation","pbx","",r.ext_number,JSON.stringify(t)),[2,i.status(402).send({error:"Wrong Name",message:"Provider Name already exist."})];e.label=2;case 2:return"0"==a?(s=r.body,s.id,knex(table_1.Table.tbl_Provider).insert({provider:""+t.name}).then(function(e){n.apiInstance.log(200,"Provider created succesfully","providerCreation","pbx","",r.ext_number,""),i.send({status_code:200,message:"Provider created succesfully."})}).catch(function(e){throw logger_util_1.errorLog(e),i.status(400).send({status_code:400,message:"Bad Request :"+e}),n.apiInstance.log(400,"Bad Request : "+e,"providerCreation","pbx","",r.ext_number,JSON.stringify(t)),e})):(this.apiInstance.log(403,"Forbidden - User has no permission for perform this action.","providerCreation","pbx","","",""),i.status(403).send({status_code:403,error:"Forbidden",message:"User has no permission for perform this action"})),[2]}})})},e.prototype.getProvider=function(s,n,e){return __awaiter(this,void 0,void 0,function(){var t,a=this;return __generator(this,function(e){return t=s.admin||1,console.log(t),0==t&&knex(table_1.Table.tbl_Provider).select("*").then(function(e){e.length?(a.apiInstance.log(200,"Get Provider.","","",s.admin),n.status(200).send({status_code:200,message:"Provider data listing.",data:e})):(a.apiInstance.log(201,"No data found.","","","Get Provider."),n.status(201).send({status_code:201,error:"No data found."}))}).catch(function(e){logger_util_1.errorLog(e),n.status(400).send({status_code:400,message:"Bad Request."})}),[2]})})},e.prototype.CreateCallRate=function(o,u,e){return __awaiter(this,void 0,void 0,function(){var t,a,s,n,r,i,l=this;return __generator(this,function(e){switch(e.label){case 0:if(t=o.user_type,!(a=o.body).plan_type)return this.apiInstance.log(402,"Parameter-Missing.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide plan type."})];if(0!=a.plan_type&&1!=a.plan_type&&2!=a.plan_type&&3!=a.plan_type&&4!=a.plan_type)return this.apiInstance.log(402,"Invalid value.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid value.",message:" plan type should be 0, 1, 2, 3 & 4"})];if(!a.call_plan)return this.apiInstance.log(402,"Parameter-Missing.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide call plan."})];if(a.area_code){if(5<a.area_code.toString().length)return this.apiInstance.log(402,"Invalid length.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"length excced.",message:"please provide valid length of number."})];if("string"==typeof a.area_code)return this.apiInstance.log(402,"Type Missmatch.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Type Missmatch.",message:"provide only string value."})]}if(!a.buying_rate)return this.apiInstance.log(402,"Parameter-Missing.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide buying rate."})];if(5<a.buying_rate.toString().length)return this.apiInstance.log(402,"Invalid length.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"length excced.",message:"please provide valid length of number."})];if("string"==typeof a.buying_rate)return this.apiInstance.log(402,"Type Missmatch.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Type Missmatch.",message:"provide only number value."})];if(!a.selling_rate)return this.apiInstance.log(402,"Parameter-Missing.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide selling rate."})];if(5<a.selling_rate.toString().length)return this.apiInstance.log(402,"Invalid length.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"length excced.",message:"please provide valid length of number."})];if("string"==typeof a.selling_rate)return this.apiInstance.log(402,"Type Missmatch.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Type Missmatch.",message:"provide only number value."})];if(a.buying_rate>a.selling_rate)return this.apiInstance.log(402,"Invalid data.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid data.",message:"Selling rate should be greater than Buying."})];if(a.selling_billing){if(3<a.selling_billing.toString().length)return this.apiInstance.log(402,"Invalid length.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"length excced.",message:"please provide valid length of number."})];if("string"==typeof a.selling_billing)return this.apiInstance.log(402,"Type Missmatch.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Type Missmatch.",message:"provide only number value."})]}if(a.selling_min_duration){if(2<a.selling_min_duration.toString().length)return this.apiInstance.log(402,"Invalid length.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"length excced.",message:"please provide valid length of number."})];if("string"==typeof a.selling_min_duration)return this.apiInstance.log(402,"Type Missmatch.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Type Missmatch.",message:"provide only number value."})];if(60<a.selling_min_duration)return this.apiInstance.log(402,"Invalid value","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid value.",message:"selling minimun duration can not be greater from selling billing."})]}return a.dial_prefix?"string"==typeof a.dial_prefix?(this.apiInstance.log(402,"Invalid data.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid type.",message:"dial prefix con not be string."})]):[4,this.validationInstance.getCountry(a.dial_prefix)]:(this.apiInstance.log(402,"Parameter-Missing.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide dial prefix."})]);case 1:return 0==(r=e.sent())?(this.apiInstance.log(402,"Invalid dial prefix.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"invalid dial prefix.",message:"country id does not exist for this dial prefix."})]):a.gateway?[4,this.validationInstance.validateGateway(a.gateway)]:(this.apiInstance.log(402,"Parameter-Missing.","create call rate plan."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide gateway."})]);case 2:return 0==(i=e.sent())?(this.apiInstance.log(402,"Invalid gateway.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"invalid dial prefix.",message:"gateway does not exist."})]):"0"!=a.plan_type?[3,4]:a.group?(this.apiInstance.log(402,"Invalid Parameter.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid Parameter.",message:"group does not applicable on standard."})]):[4,this.validationInstance.validatePlanType("",a.call_plan)];case 3:if(0==(s=e.sent()))return this.apiInstance.log(402,"Invalid call plan","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"invalid call plan",message:"call plan does not exist."})];e.label=4;case 4:return 1!=a.plan_type&&2!=a.plan_type&&4!=a.plan_type?[3,8]:a.area_code?(this.apiInstance.log(402,"Parameter Exceed.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter exceeds.",message:"area code not acceptable for bundle."})]):a.selling_billing?(this.apiInstance.log(402,"Parameter Exceed.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter exceeds.",message:"selling billing not acceptable for bundle."})]):a.selling_min_duration?(this.apiInstance.log(402,"Parameter Exceed.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Parameter exceeds.",message:"selling minimum duration not acceptable for bundle."})]):a.group?"0"!=a.group&&"1"!=a.group?(this.apiInstance.log(402,"Invalid value.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid value.",message:"group should be either 0 or 1"})]):1!=a.group?[3,6]:a.group_id?"string"==typeof a.group_id?(this.apiInstance.log(402,"Invalid value.","create call rate plan."),[2,u.status(402).send({status_code:402,error:"Invalid value.",message:"group name can not accept number"})]):[4,this.validationInstance.validateGroup(a.group_id)]:(this.apiInstance.log(402,"Parameter-Missing.","create call rate plan."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide group id."})]):(this.apiInstance.log(402,"Parameter-Missing.","create call rate plan."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide group."})]);case 5:if(0==(n=e.sent()))return this.apiInstance.log(402,"Invalid group.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid group.",message:"group not exist."})];a.talktime_minutes=n,e.label=6;case 6:return[4,this.validationInstance.validatePlanType(a.plan_type,a.call_plan)];case 7:if(0==(s=e.sent()))return this.apiInstance.log(402,"Invalid call plan","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"invalid call plan",message:"call plan does not exist for bundle."})];e.label=8;case 8:if(3==a.plan_type){if(!a.booster)return this.apiInstance.log(402,"Parameter-Missing.","create call rate plan."),[2,u.status(402).send({status_code:402,error:"Parameter-Missing.",message:"please provide booster."})];if(1!=a.booster&&2!=a.booster&&4!=a.booster)return this.apiInstance.log(402,"Invalid value.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Invalid value.",message:"booster should be 1 2 & 4"})];if(a.talktime_minutes&&"string"==typeof a.talktime_minutes)return this.apiInstance.log(402,"Type Missmatch.","call rate plan creation."),[2,u.status(402).send({status_code:402,error:"Type Missmatch.",message:"provide only number value."})]}return a.selling_min_duration=a.selling_min_duration||0,a.selling_billing=a.selling_billing||60,a.status=a.status||"0",a.area_code=a.area_code||"",a.booster=a.booster||"",a.talktime_minutes=a.talktime_minutes||"0","0"==t&&knex(table_1.Table.tbl_Call_Plan_Rates).insert({call_plan_id:s,dial_prefix:"+"+a.dial_prefix,buying_rate:""+a.buying_rate,selling_rate:""+a.selling,selling_min_duration:""+a.selling_min_duration,selling_billing_block:""+a.selling_billing,status:""+a.status,gateway_id:""+i,phonecode:""+r,area_code:""+a.area_code,is_group:""+a.group,group_id:""+a.group_id,talktime_minutes:""+a.talktime_minutes,used_minutes:"0",actual_minutes:""+a.talktime_minutes,booster_minutes:"0",plan_type:""+a.plan_type,booster_for:""+a.booster}).then(function(e){return e?(l.apiInstance.log(200,"call rate plan created succesfully.","call rate plan creation."),u.status(200).send({status_code:200,message:"call plan rate created succesfully."})):(l.apiInstance.log(400,"Bad Request.","call rate plan creation."),u.status(400).send({status_code:400,error:"Bad Request."}))}),[2]}})})},e}();exports.MinutePlanService=MinutePlanService;